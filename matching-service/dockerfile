FROM node:20-alpine AS base

FROM base AS deps
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci --only=production

FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production

# Run as non-root user
RUN addgroup --system --gid 1002 nodejs && \
    adduser --system --uid 1002 matching

COPY --from=builder --chown=matching:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=matching:nodejs /app/package.json ./package.json
COPY --from=builder --chown=matching:nodejs /app/server.js ./server.js
COPY --from=builder --chown=matching:nodejs /app/index.js ./index.js
COPY --from=builder --chown=matching:nodejs /app/controller ./controller
COPY --from=builder --chown=matching:nodejs /app/middleware ./middleware
COPY --from=builder --chown=matching:nodejs /app/routes ./routes
COPY --from=builder --chown=matching:nodejs /app/services ./services
COPY --from=builder --chown=matching:nodejs /app/utils ./utils

USER matching
EXPOSE ${PORT}

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3002/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

CMD ["npm", "start"]
